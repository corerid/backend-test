// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	services "github.com/corerid/backend-test/services"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceI is a mock of ServiceI interface.
type MockServiceI struct {
	ctrl     *gomock.Controller
	recorder *MockServiceIMockRecorder
}

// MockServiceIMockRecorder is the mock recorder for MockServiceI.
type MockServiceIMockRecorder struct {
	mock *MockServiceI
}

// NewMockServiceI creates a new mock instance.
func NewMockServiceI(ctrl *gomock.Controller) *MockServiceI {
	mock := &MockServiceI{ctrl: ctrl}
	mock.recorder = &MockServiceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceI) EXPECT() *MockServiceIMockRecorder {
	return m.recorder
}

// GetTransaction mocks base method.
func (m *MockServiceI) GetTransaction(getTransaction services.GetTransaction) ([]services.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransaction", getTransaction)
	ret0, _ := ret[0].([]services.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransaction indicates an expected call of GetTransaction.
func (mr *MockServiceIMockRecorder) GetTransaction(getTransaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransaction", reflect.TypeOf((*MockServiceI)(nil).GetTransaction), getTransaction)
}

// MonitorBlockEthereum mocks base method.
func (m *MockServiceI) MonitorBlockEthereum(specifiedAddress string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MonitorBlockEthereum", specifiedAddress)
}

// MonitorBlockEthereum indicates an expected call of MonitorBlockEthereum.
func (mr *MockServiceIMockRecorder) MonitorBlockEthereum(specifiedAddress interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MonitorBlockEthereum", reflect.TypeOf((*MockServiceI)(nil).MonitorBlockEthereum), specifiedAddress)
}
